/**
 * Copyright (c) 2011 Bruno Jouhier <bruno.jouhier@sage.com>
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */
var fs = require("fs");
var path = require("path");
var Streamline = require("..");
var registered = false;

var banner = "/*** Generated by streamline.js - DO NOT EDIT ***/\n";

exports.register = function() {
	if (registered) 
		return;
	registered = true;

    // force require() to check for .js_ before .js
    var js_extension = require.extensions[".js"];
    delete require.extensions[".js"];

    require.extensions[".js_"] = function(module, filename){
        var content = streamline_file(filename);
        module._compile(content, filename);
    };

    require.extensions[".js"] = js_extension;

	function streamline_file(filename_){
		var dirname = path.dirname(filename_);
		var ext = path.extname(filename_);
		var basename = path.basename(filename_, ext);
		var filename = path.join(dirname, basename + '.js');

		//var content = fs.readFileSync(filename_, 'utf8');
		var transformed = banner + Streamline.transformFile(filename_);
		fs.writeFileSync(filename, transformed, 'utf8');
		return transformed;	
	}
}
