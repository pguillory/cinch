/*** Generated by streamline.js - DO NOT EDIT ***/
exports.test = function(next, assert) {
    f(function(err, result) {
        assert.equal(result, 5);
        assert.is_true(g_called);
        next();
    });
};
function f(callback) {
    callback = (callback || __throw_1);
    __try_block_2();
    function __try_block_2() {
        var main_callback = callback;
        var callback = function(err, result) {
            (err ? __catch_block_3 : main_callback)(err, result);
        };
        g(function(err, __result_6) {
            if (err) {
                return callback(err)
            };
            __result_6;
            __rest_block_5();
        });
    };
    function __catch_block_3(err) {
        return callback(err);
        __rest_block_5();
    };
    function __rest_block_5() {
        return callback(null, 5);
    };
};
var g_called = false;
function g(callback) {
    callback = (callback || __throw_1);
    g_called = true;
    return callback(null);
};
function __throw_1(err) {
    if (err) {
        throw err;
    }
;
};
