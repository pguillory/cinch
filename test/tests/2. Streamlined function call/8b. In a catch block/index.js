/*** Generated by streamline.js - DO NOT EDIT ***/
exports.test = function(next, assert) {
    f(function(err, result) {
        assert.equal(result, 5);
        assert.is_true(g_called);
        next();
    });
};
function f(callback) {
    return __try_block_1(function(err) {
        if (err) {
            __catch_block_2(err, function(err) {
                if (err) {
                    if (callback) {
                        return callback(err)
                    } else {
                        throw err
                    }
                };
                __finally_block_3(function(err) {
                    if (err) {
                        if (callback) {
                            return callback(err)
                        } else {
                            throw err
                        }
                    };
                    __rest_block_4(callback);
                });
            });
        }
         else {
            __finally_block_3(function(err) {
                if (err) {
                    if (callback) {
                        return callback(err)
                    } else {
                        throw err
                    }
                };
                __rest_block_4(callback);
            });
        }
    ;
    });
    function __try_block_1(callback) {
        {
            var err = new Error();
            if (callback) {
                return callback(err)
            } else {
                throw err
            };
        };
    };
    function __catch_block_2(err, callback) {
        g(function(err, __async_result_5) {
            if (err) {
                if (callback) {
                    return callback(err)
                } else {
                    throw err
                }
            };
            __async_result_5;
            if (callback) {
                return callback(null)
            } else {
                return
            };
        });
    };
    function __finally_block_3(callback) {
        if (callback) {
            return callback(null)
        } else {
            return
        };
    };
    function __rest_block_4(callback) {
        if (callback) {
            return callback(null, 5)
        } else {
            return
        };
        if (callback) {
            return callback(null)
        } else {
            return
        };
    };
};
var g_called = false;
function g(callback) {
    g_called = true;
    if (callback) {
        return callback(null)
    } else {
        return
    };
};
