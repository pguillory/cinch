/*** Generated by streamline.js - DO NOT EDIT ***/
function test() {
    ((err ? __catch_block_2 : main_callback))(err, result);
};
exports.test = function(next, assert) {
    f(function(err, result) {
        assert.is_null(err);
        assert.equal(result, 5);
        assert.is_true(g_called);
        next();
    });
};
function f(callback) {
    __try_block_1();
    function __try_block_1() {
        var main_callback = callback;
        var callback = function(err, result) {
            if (err) {
                __catch_block_2(err);
            }
             else {
                main_callback(null, result);
            }
        ;
        };
        {
            var err = new Error();
            if (callback) {
                return callback(err)
            } else {
                throw err
            };
        };
    };
    function __catch_block_2(err) {
        g(function(err, __async_result_5) {
            if (err) {
                if (callback) {
                    return callback(err)
                } else {
                    throw err
                }
            };
            __async_result_5;
            __finally_block_3();
        });
    };
    function __finally_block_3() {
        __rest_block_4();
    };
    function __rest_block_4() {
        if (callback) {
            return callback(null, 5)
        } else {
            return
        };
    };
};
var g_called = false;
function g(callback) {
    g_called = true;
    if (callback) {
        return callback(null)
    } else {
        return
    };
};
function f_model(callback) {
    __try_block_1();
    function __try_block_1() {
        var main_callback = callback;
        var callback = function(err, result) {
            if (err) {
                return __catch_block_2(err)
            };
            return main_callback(null, result);
        };
        var err = new Error();
        if (callback) {
            return callback(err);
        }
         else {
            throw err;
        }
    ;
    ;
        __rest_block_4();
    };
;
    function __catch_block_2(err) {
        g(function(err, __async_result_5) {
            if (err) {
                if (callback) {
                    return callback(err);
                }
                 else {
                    throw err;
                }
            ;
            }
        ;
        ;
            __async_result_5;
            __rest_block_4();
        });
    };
;
    function __rest_block_4() {
        if (callback) {
            return callback(null, 5);
        }
         else {
            return;
        }
    ;
    ;
    };
;
};
;
