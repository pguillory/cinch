/*** Generated by streamline.js - DO NOT EDIT ***/
exports.test = function(next, assert) {
    pow(2, 3, function(err, result) {
        assert.equal(result, 8);
        next();
    });
};
function pow(base, exponent, callback) {
    callback = (callback || __throw_1);
    function count(callback) {
        callback = (callback || __throw_1);
        return callback(null, exponent--);
    };
    function times(a, b, callback) {
        callback = (callback || __throw_1);
        return callback(null, (a * b));
    };
    var n = 1;
    setTimeout(__while_loop_2, 0);
    function __while_loop_2() {
        count(function(err, __result_3) {
            if (err) {
                return callback(err)
            };
            if ((__result_3 > 0)) {
                times(n, base, function(err, __result_4) {
                    if (err) {
                        return callback(err)
                    };
                    n = __result_4;
                    setTimeout(__while_loop_2, 0);
                });
            }
             else {
                return callback(null, n);
            }
        ;
        });
    };
};
function __throw_1(err) {
    if (err) {
        throw err;
    }
;
};
